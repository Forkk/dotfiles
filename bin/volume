#!/bin/sh
set -e

UPDATE_NOTIFY=$HOME/bin/update-notify.sh

# Uses amixer to change volume on default output.

# Get the index of the selected sink:
get_sink() {
    pacmd list-sinks |
        awk '/index:/{i++} /* index:/{print i; exit}'
}

# Get the selected sink volume
get_vol() {
    volpct=$(pacmd list-sinks |
        awk '/^\svolume:/{i++} i=='$(get_sink)'{print $5; exit}')
    echo ${volpct::-1}
}

function is_muted {
    # FIXME: This is broken
    return 1;
    # We'll just use the volume for the left channel, since they're probably
    # both the same.
    val=$(amixer get Master | grep "Front Left:" | awk '{ print substr($6, 2, length($6) - 2) }')
    if [[ $val == "off" ]]; then
        return 0;
    else
        return 1;
    fi
}

function set_vol {
    echo $@
    pactl set-sink-volume @DEFAULT_SINK@ "$@"
}

function volume_icon {
    if is_muted; then
        echo audio-volume-muted
    else
        if [[ $1 -gt 66 ]]; then
            echo audio-volume-high
        elif [[ $1 -gt 33 ]]; then
            echo audio-volume-medium
        elif [[ $1 -gt 0 ]]; then
            echo audio-volume-low
        else
            echo audio-volume-low
        fi
    fi
}

volume_bar() {
    volume=$(get_vol)
    fillbcount=$(($volume / 5 + 1))
    fillblocks=$(seq -s " " $fillbcount | sed 's/[0-9]//g')
    emptyblocks=$(seq -s " " $((22 - $fillbcount)) | sed 's/[0-9]//g')
    echo -n '<span background="#fbf1c7">'"$fillblocks"'</span>'
    echo    '<span background="#282828">'"$emptyblocks"'</span>'
}

for arg in "$@"; do
    case "$arg" in
        +* )
            by="${arg:1}"
            cur=$(get_vol)
            new=$(( $cur + $by ))
            [[ $new -le 100 ]] || new=100
            set_vol $new%
            ;;
        -* )
            by="${arg:1}"
            cur=$(get_vol)
            new=$(( $cur - $by ))
            [[ $new -gt 0 ]] || new=0
            set_vol $new%
            ;;
        get )
            get_vol
            ;;
        is_muted )
            if is_muted; then
                echo "muted";
            else
                echo "unmuted";
            fi
            ;;
        mute )
            set_vol mute
            ;;
        unmute )
            set_vol unmute
            ;;
        toggle )
            set_vol toggle
            ;;
        notify )
            vol=$(get_vol)
            echo $(volume_icon $vol)
            dunstify "Volume" \
                "$(volume_bar) $vol%" \
                -i $(volume_icon $vol) \
                --urgency=low \
                -h string:x-dunst-stack-tag:volume
            ;;
        * )
            set_vol $arg%
            ;;
    esac
done
