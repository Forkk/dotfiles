#!/bin/bash

set -euf -o pipefail

#
# Tarsnap wrapper script
#
# This command wraps tarsnap and shortens several commands like --list-archives,
# as well as providing named backup configuration in ~/.config/tsnap.
#
#
# Config template
# bakname="home"
# keyfile="/path/to/keyfile/home.key"
# cachedir="/path/to/cache/home"
# dirs=("/home/forkk")
# excludes=(
#     "/home/forkk/.local/share/Steam/"
# )
# log="$log_path/home.log"
#

cfg_dir="/home/forkk/.config/tsnap"
log_path="/home/forkk/tarsnap/log"

usage() {
    echo "usage: $0 <cmd> <cfg_name>"
}


if [[ -z "$2" ]]; then
    echo "Expected backup name"
    usage
    exit -1
fi

source "$cfg_dir/$2"

function teelog {
    tee -a "$log"
}

args=()
case "$1" in
    'ls' )
        cmd="--list-archives"
        args=("")
        ;;
    'bak' )
        doing_backup=1
        cmd="-c"
        name="$bakname-$(date +%F_%H-%M)"
        args=("--print-stats" "--humanize-numbers" "-f" "$name")

        # Add excludes
        for pat in "${excludes[@]}"; do
            if [[ "$pat" != "" ]]; then
                args+=("--exclude" "$pat")
            fi
        done

        for dir in "${dirs[@]}"; do
            args+=("$dir")
        done
        ;;
    'del' )
        cmd="-d"
        args=()
        for bak in "${@:3}"; do
            echo "Will delete backup $bak"
            args+=("-f" "$bak")
        done
        ;;
    'fsck' )
        name="$bakname-$(date +%F_%H-%M)"
        cmd="--fsck"
        ;;
    'stat' )
        cmd="--print-stats"
        args=("--humanize-numbers")
        ;;
    * )
        cmd="$1"
        args="${@:2}"
        ;;
esac

function baklog {
    if [[ -v doing_backup ]]; then
        tee -a "$log"
    else
        cat /dev/stdin
    fi
}

if [[ -v doing_backup ]]; then
    echo "Starting backup at: $(date)" | teelog
fi

echo tarsnap "$cmd" --keyfile "$keyfile" --cachedir "$cachedir" "${args[@]}"
tarsnap "$cmd" --keyfile "$keyfile" --cachedir "$cachedir" "${args[@]}" 2>&1 | baklog

if [[ -v doing_backup ]]; then
    echo "Finished backup at: $(date)" | baklog
    echo `date` > "$log_path/last_$bakname"
fi
